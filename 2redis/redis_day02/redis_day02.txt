1.python操作redis的库
   提供的方法与客户端执行的redis命令名称都是相同的。
   方法的结果大多数是字节串，而我们编程时更多的使用字符串
   字节串.decode()=>字符串
   字符串.encode()=>字节串
2. 生产者消费者模式
3. 位图操作
    位图操作本质上也是属于字符串类型操作的范畴。只不过操作的
    粒度更细了。
    set name 'aid2103'
    get name  --对整个字符串操作的
    'aid2103'
    setrange  --可以对字符串中的某个字符操作，例如把a换成A。
    Aid2103 。最小粒度是单个字符。
    位图操作 -- 粒度是二进制的某个位。1个字节=8bit。但是值
                        只能是0或1。
   
    user001_login:['20210101','20211001','20211225']
    user002_login:['20210501','20211001','20211225']
    .....
    user001_login:1000000001000001       365/8个字节
    user002_login:0000010000000001
    命令
    SETBIT key offset value
    GETBIT key offset
    BITCOUNT key start end
4 案例：在django中使用mysql存储数据，使用redis做缓存。
   注意的问题：数据的一致性。当数据发生了改变，注意清缓存。
                        缓存数据一般要设置有效期。 
   在实际开发中，hash散列类型比较适合存储对象。 h
5. 列表、集合、有序集合对比：
    列表: 可重复、有序      
    集合: 不可重复、无序           s
    有序集合:  不可重复、有序   z
    




    
          